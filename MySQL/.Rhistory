require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
summary(mydb)
dbListTables(mydb)
### como son esas columnas
dbColumnInfo(mydb, "heroes_information")
dbListFields(mydb, "heroes_information")
### como son esas columnas
dbColumnInfo(mydb, "heroes_information")
### Lee la información completa de una tabla
hero <- dbReadTable(mydb, "heroes_information")
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
summary(mydb)
dbListTables(mydb)
dbListFields(mydb, "heroes_information")
### como son esas columnas
dbColumnInfo(mydb, "heroes_information")
### Lee la información completa de una tabla
hero <- dbReadTable(mydb, "heroes_information")
head(hero)
###dbGetQuery()
hero <- bdGetQuery(mydb, "SELECT * FROM heroes_information;")
###dbGetQuery()
hero <- dbGetQuery(mydb, "SELECT * FROM heroes_information;")
head(hero)
str(hero)
### Para no extraer toda la información el send lo envía y fetch lo traer de regreso
Query <- dfSendQuery(mydb, "SELECT * FROM heroes_information;")
### Para no extraer toda la información el send lo envía y fetch lo traer de regreso
Query <- dbSendQuery(mydb, "SELECT * FROM heroes_information;")
hero <- dbFetch(Query, n=10)
hero
dbGetInfo(Query)
###Cuantas filas me va a retornar mi query?
dbGetRowCount(Query)
##dbWriteTable()
x <- 1:10
y <- letters[1:10]
test <- data.frame(x,y, stringsAsFactors = FALSE)
dbWriteTable(mydb, "test20170479", test, row.names = FALSE)
dbWriteTable(mydb, "test20170479", test, row.names = FALSE)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
dbWriteTable(mydb, "test20170479", test, row.names = FALSE)
dbList$Tables(mydb)
dbListTables(mydb)
x <- sample(100,10)
y <- letters[11:20]
test2 <- data.frame(x,y, stringsAsFactors = FALSE)
dbWriteTable(mydb, "test20170479", test2, overwrite = TRUE)
x <- sample(100,10)
y <- letters[6:15]
test3 <- data.frame(x,y, stringsAsFactors = FALSE)
dbWriteTable(mydb, "test20170479", test, test3, append = TRUE, row.names = FALSE)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(MySQL(),host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
#Seleccionar el nombre del héroe y la casa publicadora
hero <- dbReadTable(mydb, "heroes_information")
head(hero)
nombre <- dbGetQuery(mydb, "SELECT name, publisher FROM heroes_information;")
head(hero)
casas <-  dbGetQuery(mydb, "SELECT publisher FROM heroes_information;")
casas <-  dbGetQuery(mydb, "SELECT publisher FROM heroes_information;")
head(casas)
#Seleccionar el nombre del héroe y la casa publicadora
hero <- dbReadTable(mydb, "heroes_information")
head(hero)
nombre <- dbGetQuery(mydb, "SELECT name, publisher FROM heroes_information;")
head(nombre)
casas <-  dbGetQuery(mydb, "SELECT DISTINCT publisher FROM heroes_information;")
head(casas)
casas <-  dbGetQuery(mydb, "SELECT COUNT(DISTINCT publisher) FROM heroes_information;")
head(casas)
#Seleccionar el nombre del héroe y la casa publicadora
hero <- dbReadTable(mydb, "heroes_information")
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
#Seleccionar el nombre del héroe y la casa publicadora
hero <- dbReadTable(mydb, "heroes_information")
head(hero)
nombre <- dbGetQuery(mydb, "SELECT name, publisher FROM heroes_information;")
#head(nombre)
casas <-  dbGetQuery(mydb, "SELECT height FROM heroes_information WHERE height > 200;")
head(casas)
casas <-  dbGetQuery(mydb, "SELECT name, height FROM heroes_information WHERE height > 200;")
head(casas)
casas <-  dbGetQuery(mydb, "SELECT name, height, race FROM heroes_information WHERE height > 200 AND race = HUMAN;")
casas <-  dbGetQuery(mydb, "SELECT name, height FROM heroes_information WHERE height > 200;")
head(casas)
casas <-  dbGetQuery(mydb, "SELECT name, race, weight FROM heroes_information WHERE weight > 200 AND race = human ;")
casas <-  dbGetQuery(mydb, "SELECT name, race, weight FROM heroes_information WHERE weight > 200 AND race = 'human';")
r <- dbGetQuery(mydb, "SELECT name, weight FROM heroes_information WHERE weight > 100 OR weight < 200 ;")
head(casas)
casas <-  dbGetQuery(mydb, "SELECT name, race, weight FROM heroes_information WHERE weight > 200 AND race = 'human';")
r <- dbGetQuery(mydb, "SELECT name, weight FROM heroes_information WHERE weight > 100 OR weight < 200 ;")
head(r)
casas <-  dbGetQuery(mydb, "SELECT name, race, weight FROM heroes_information WHERE weight > 200 AND race = 'human';")
r <- dbGetQuery(mydb, "SELECT name, weight FROM heroes_information WHERE weight > 100 AND weight < 200 ;")
head(r)
publishers <-  dbGetQuery(mydb, "SELECT DISTINCT publisher FROM heroes_information;")
head(publishers)
publisher <-  dbGetQuery(mydb, "SELECT COUNT(DISTINCT publisher) FROM heroes_information;")
head(publisher)
altura <-  dbGetQuery(mydb, "SELECT name, height FROM heroes_information WHERE height > 200;")
head(altura)
humano <-  dbGetQuery(mydb, "SELECT name, race, weight FROM heroes_information WHERE weight > 200 AND race = 'human';")
head(humano)
peso <- dbGetQuery(mydb, "SELECT name, weight FROM heroes_information WHERE weight > 100 AND weight < 200 ;")
head(peso)
peso <- dbGetQuery(mydb, "SELECT COUNT name, eyes.color FROM heroes_information WHERE eye.color = 'azul' or eye.color = 'rojo' ;")
peso <- dbGetQuery(mydb, "SELECT COUNT name, eyes color FROM heroes_information WHERE eye color = 'azul' or eye color = 'rojo' ;")
peso <- dbGetQuery(mydb, "SELECT COUNT name, eyes.color FROM heroes_information WHERE eye.color = 'blue' or eye.color = 'red' ;")
peso <- dbGetQuery(mydb, "SELECT COUNT name, `eyes color` FROM heroes_information WHERE `eye color` = 'blue' or `eye color` = 'red' ;")
peso <- dbGetQuery(mydb, "SELECT COUNT name, `eye color` FROM heroes_information WHERE `eye color` = 'blue' or `eye color` = 'red';")
peso <- dbGetQuery(mydb, "SELECT COUNT(name, `eye color`) FROM heroes_information WHERE `eye color` = 'blue' or `eye color` = 'red';")
peso <- dbGetQuery(mydb, "SELECT COUNT(`eye color`) FROM heroes_information WHERE `eye color` = 'blue' or `eye color` = 'red';")
peso <- dbGetQuery(mydb, "SELECT COUNT(`eye color`) FROM heroes_information WHERE `eye color` = 'blue' or `eye color` = 'red';")
head(peso)
color <- dbGetQuery(mydb, "SELECT COUNT(`eye color`) FROM heroes_information WHERE `eye color` = 'blue' or `eye color` = 'red';")
head(color)
peso <- dbGetQuery(mydb, "SELECT name, weight FROM heroes_information WHERE  = PESO  BETWEEN 100 AND 200 ;")
peso <- dbGetQuery(mydb, "SELECT name, weight FROM heroes_information WHERE  peso between(100,200);")
peso <- dbGetQuery(mydb, "SELECT name, weight FROM heroes_information WHERE  peso between 100 AND 200;")
peso <- dbGetQuery(mydb, "SELECT name, weight FROM heroes_information WHERE  weight between 100 AND 200;")
head(peso)
peso
orderby <- dbGetQuery(mydb, "SELECT name, weight, height FROM heroes_information WHERE weight > 200 AND height > 100 ORDER BY height DESC;")
orderby
orderby <- dbGetQuery(mydb, "SELECT name, race FROM heroes_information WHERE ORDER BY  name, race;")
orderby2 <- dbGetQuery(mydb, "SELECT name, race FROM heroes_information ORDER BY  name, race;")
orderby2
groupby <- dbGetQuery(mydb, "SELECT publisher, gender, count(gender) FROM heroes_information GROUP BY gender = woman ORDER BY gender desc ;")
groupby <- dbGetQuery(mydb, "SELECT publisher, gender, count(gender) FROM heroes_information GROUP BY publisher ORDER BY gender desc ;")
groupby
groupby <- dbGetQuery(mydb, "SELECT publisher, gender, count(gender) FROM heroes_information WHERE gender = 'woman' GROUP BY publisher ORDER BY gender desc ;")
groupby
groupby <- dbGetQuery(mydb, "SELECT publisher, count(gender) FROM heroes_information WHERE gender = 'woman' GROUP BY publisher ORDER BY gender desc ;")
groupby
groupby <- dbGetQuery(mydb, "SELECT publisher, count(gender) FROM heroes_information WHERE gender = 'female' GROUP BY publisher ORDER BY gender desc ;")
groupby
groupby <- dbGetQuery(mydb, "SELECT publisher, gender, count(gender) FROM heroes_information WHERE gender = 'female' GROUP BY publisher ORDER BY count(gender) desc ;")
groupby
groupby <- dbGetQuery(mydb, "SELECT publisher, alignment, race, count(names) FROM heroes_information WHERE alignment = 'good' GROUP BY publisher HAVING COUNT(publisher) > 30 ;")
groupby <- dbGetQuery(mydb, "SELECT publisher, alignment, race, count(publishers) FROM heroes_information WHERE alignment = 'good' GROUP BY publisher HAVING COUNT(publisher) > 30 ;")
groupby <- dbGetQuery(mydb, "SELECT publisher, alignment, race, count(publisher) FROM heroes_information WHERE alignment = 'good' GROUP BY publisher HAVING COUNT(publisher) > 30 ;")
groupby
groupby <- dbGetQuery(mydb, "SELECT publisher, alignment, race, count(publisher) FROM heroes_information WHERE alignment = 'good' GROUP BY publisher HAVING COUNT(name) > 30 ;")
groupby
groupby <- dbGetQuery(mydb, "SELECT publisher, alignment, race, count(name) FROM heroes_information WHERE alignment = 'good' GROUP BY publisher HAVING COUNT(name) > 30 ;")
groupby
groupby <- dbGetQuery(mydb, "SELECT publisher, alignment, race, count(name) FROM heroes_information WHERE alignment = 'good' GROUP BY publisher HAVING COUNT(name) > 30 ORDER BY count(name) desc;")
groupby
#Solo para ver el nombre de las columnas
hero <- dbReadTable(mydb, "heroes_information")
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
#Solo para ver el nombre de las columnas
hero <- dbReadTable(mydb, "heroes_information")
head(hero)
#Obtener el nombre del superhéroe y casa publicadora de la tabla heroes_information
nombre <- dbGetQuery(mydb, "SELECT name, publisher FROM heroes_information;")
#head(nombre)
#Obtener el nombre del superhéroe y casa publicadora de la tabla heroes_information
nombre <- dbGetQuery(mydb, "SELECT name, publisher FROM heroes_information;")
head(nombre)
#Obtener las casas publicadoras de la tabla heroes_information.
publishers <-  dbGetQuery(mydb, "SELECT DISTINCT publisher FROM heroes_information;")
publishers
#Obtener una cuenta de las distintas casas publicadoras de la tabla
heroes_information.
#Obtener una cuenta de las distintas casas publicadoras de la tabla heroes_information
publisher <-  dbGetQuery(mydb, "SELECT COUNT(DISTINCT publisher) FROM heroes_information;")
head(publisher)
# Seleccionar todos los campos de la table heroes_information donde el superheroe mide mas de 2 metros.
altura <-  dbGetQuery(mydb, "SELECT * FROM heroes_information WHERE height > 200;")
head(altura)
#Seleccionar todos los campos de los superheroes que son humanos.
humano <-  dbGetQuery(mydb, "SELECT * FROM heroes_information WHERE weight > 200 AND race = 'human';")
head(humano)
#Seleccionar todos los campos de los superheroes que son humanos.
humano <-  dbGetQuery(mydb, "SELECT * FROM heroes_information WHERE race = 'human';")
head(humano)
#Seleccionar todos los campos de los superheroes que son humanos y miden más de 2 metros.
humano2m <-  dbGetQuery(mydb, "SELECT * FROM heroes_information WHERE height > 200 AND race = 'human';")
humanos2m
#Seleccionar todos los campos de los superheroes que son humanos y miden más de 2 metros.
humano2m <-  dbGetQuery(mydb, "SELECT * FROM heroes_information WHERE height > 200 AND race = 'human';")
humano2m
#Contar todos los superhéroes que pesen más de 100 y menos de 200.
peso <- dbGetQuery(mydb, "SELECT count(name) FROM heroes_information WHERE weight > 100 AND weight < 200 ;")
head(peso)
#Cuenten los super heroes que tengan los ojos de color azul o rojo.
color <- dbGetQuery(mydb, "SELECT COUNT(`eye color`) FROM heroes_information WHERE `eye color` = 'blue' or `eye color` = 'red';")
head(color)
#Realizar una cuenta inclusiva de los superhéroes que pesen entre 100 y 200.
peso <- dbGetQuery(mydb, "SELECT name, weight FROM heroes_information WHERE  weight between 99 AND 201;")
peso
#Realizar una cuenta inclusiva de los superhéroes que pesen entre 100 y 200.
peso <- dbGetQuery(mydb, "SELECT name, weight FROM heroes_information WHERE  weight between 100 AND 200;")
peso
#Seleccionar el nombre, peso y altura de los superhéroes que pesen mas de 200 y midan mas de 100 ordenados por altura de manera descendente.
orderby <- dbGetQuery(mydb, "SELECT name, weight, height FROM heroes_information WHERE weight > 200 AND height > 100 ORDER BY height DESC;")
orderby
#Seleccionar el nombre y raza de los superhéroes, ordenarlos por nombre y por raza.
orderby2 <- dbGetQuery(mydb, "SELECT name, race FROM heroes_information ORDER BY  name, race;")
orderby2
#Seleccionar la casa productora y el genero de los superhéroes y realizar un conteo de los superhéroes que sean mujeres, agrupado por casa productora, ordenado de forma descendente por cuenta.
groupby <- dbGetQuery(mydb, "SELECT publisher, gender, count(gender) FROM heroes_information WHERE gender = 'female' GROUP BY publisher ORDER BY count(gender) desc ;")
groupby
#Seleccionar el nombre y raza de los superhéroes, ordenarlos por nombre y por raza.
orderby2 <- dbGetQuery(mydb, "SELECT name, race FROM heroes_information ORDER BY  name AND race;")
orderby2
#Seleccionar el nombre y raza de los superhéroes, ordenarlos por nombre y por raza.
orderby2 <- dbGetQuery(mydb, "SELECT name, race FROM heroes_information ORDER BY  name, race;")
orderby2
#Seleccionar la casa productora, alignment, y raza de la table heroes_information y realizar un conteo de los superheroes que su alignment es good, teniendo mas de 30 publicaciones.
groupby <- dbGetQuery(mydb, "SELECT publisher, alignment, race, count(name) FROM heroes_information WHERE alignment = 'good' GROUP BY publisher HAVING COUNT(name) > 30 ORDER BY count(name) desc;")
require(RMySQL)
connection_name <- "datawrangling.co4pgsadnasr.us-east-2.rds.amazonaws.com"
db_name <- "dataWrangling"
user <- "dstrack"
password <- "datawrangling2019"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
#Seleccionar la casa productora, alignment, y raza de la table heroes_information y realizar un conteo de los superheroes que su alignment es good, teniendo mas de 30 publicaciones.
groupby <- dbGetQuery(mydb, "SELECT publisher, alignment, race, count(name) FROM heroes_information WHERE alignment = 'good' GROUP BY publisher HAVING COUNT(name) > 30;")
groupby
#Solo para ver el nombre de las columnas
hero <- dbReadTable(mydb, "heroes_information")
head(hero)
#Obtener el nombre del superhéroe y casa publicadora de la tabla heroes_information
nombre <- dbGetQuery(mydb, "SELECT name, publisher FROM heroes_information;")
head(nombre)
#Obtener las casas publicadoras de la tabla heroes_information.
publishers <-  dbGetQuery(mydb, "SELECT DISTINCT publisher FROM heroes_information;")
publishers
#Obtener una cuenta de las distintas casas publicadoras de la tabla heroes_information
publisher <-  dbGetQuery(mydb, "SELECT COUNT(DISTINCT publisher) FROM heroes_information;")
head(publisher)
# Seleccionar todos los campos de la table heroes_information donde el superheroe mide mas de 2 metros.
altura <-  dbGetQuery(mydb, "SELECT * FROM heroes_information WHERE height > 200;")
head(altura)
#Seleccionar todos los campos de los superheroes que son humanos.
humano <-  dbGetQuery(mydb, "SELECT * FROM heroes_information WHERE race = 'human';")
head(humano)
#Obtener una cuenta de las distintas casas publicadoras de la tabla heroes_information
publisher <-  dbGetQuery(mydb, "SELECT COUNT(DISTINCT publisher) FROM heroes_information;")
head(publisher)
# Seleccionar todos los campos de la table heroes_information donde el superheroe mide mas de 2 metros.
altura <-  dbGetQuery(mydb, "SELECT * FROM heroes_information WHERE height > 200;")
head(altura)
#Seleccionar todos los campos de los superheroes que son humanos.
humano <-  dbGetQuery(mydb, "SELECT * FROM heroes_information WHERE race = 'human';")
head(humano)
#Seleccionar todos los campos de los superheroes que son humanos y miden más de 2 metros.
humano2m <-  dbGetQuery(mydb, "SELECT * FROM heroes_information WHERE height > 200 AND race = 'human';")
humano2m
#Contar todos los superhéroes que pesen más de 100 y menos de 200.
peso <- dbGetQuery(mydb, "SELECT count(name) FROM heroes_information WHERE weight > 100 AND weight < 200 ;")
head(peso)
#Cuenten los super heroes que tengan los ojos de color azul o rojo.
color <- dbGetQuery(mydb, "SELECT COUNT(`eye color`) FROM heroes_information WHERE `eye color` = 'blue' or `eye color` = 'red';")
head(color)
#Realizar una cuenta inclusiva de los superhéroes que pesen entre 100 y 200.
peso <- dbGetQuery(mydb, "SELECT name, weight FROM heroes_information WHERE  weight between 100 AND 200;")
peso
#Seleccionar el nombre, peso y altura de los superhéroes que pesen mas de 200 y midan mas de 100 ordenados por altura de manera descendente.
orderby <- dbGetQuery(mydb, "SELECT name, weight, height FROM heroes_information WHERE weight > 200 AND height > 100 ORDER BY height DESC;")
orderby
#Seleccionar el nombre y raza de los superhéroes, ordenarlos por nombre y por raza.
orderby2 <- dbGetQuery(mydb, "SELECT name, race FROM heroes_information ORDER BY  name, race;")
orderby2
#Seleccionar la casa productora y el genero de los superhéroes y realizar un conteo de los superhéroes que sean mujeres, agrupado por casa productora, ordenado de forma descendente por cuenta.
groupby <- dbGetQuery(mydb, "SELECT publisher, gender, count(gender) FROM heroes_information WHERE gender = 'female' GROUP BY publisher ORDER BY count(gender) desc ;")
groupby
#Seleccionar la casa productora, alignment, y raza de la table heroes_information y realizar un conteo de los superheroes que su alignment es good, teniendo mas de 30 publicaciones.
groupby <- dbGetQuery(mydb, "SELECT publisher, alignment, race, count(name) FROM heroes_information WHERE alignment = 'good' GROUP BY publisher HAVING COUNT(name) > 30;")
groupby
#Obtener el nombre del superhéroe y casa publicadora de la tabla heroes_information
nombre <- dbGetQuery(mydb, "SELECT name, publisher FROM heroes_information;")
head(nombre)
install.packages("statsr")
setwd("C:/Users/Mafer/Desktop/Taller")
salario <- 40000
aportacion <- 0.04
edadinicio <- 22
edadfinal <- 52
inverson_inicial <- 14500
tasa1 <- 0
tasa2 <- 0.10
media <- 0.10
desvesta <- 0.05
