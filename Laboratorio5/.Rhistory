library(stringr)
#str_extract usuario
#str_locate usuario[1:7]
#detect true
str_extract(
string = c("Nov", "Nov.", "November", "Noventa" "Noviembre"),
pattern = "^(Nov)$"
)
#str_extract usuario
#str_locate usuario[1:7]
#detect true
str_extract(
string = c("Nov", "Nov.", "November", "Noventa" "Noviembre"),
pattern = "^(Nov)$"
)
#str_extract usuario
#str_locate usuario[1:7]
#detect true
str_extract(
string = c("Nov", "Nov.", "November", "Noventa" "Noviembre"),
pattern = "Nov(\\.?"
)
#str_extract usuario
#str_locate usuario[1:7]
#detect true
str_extract(
string = c("Nov", "Nov.", "November", "Noventa" "Noviembre"),
pattern = "Nov(\\.?)"
)
library(stringr)
#str_extract usuario
#str_locate usuario[1:7]
#detect true
str_extract(
string = c("Nov", "Nov.", "November", "Noventa" "Noviembre"),
pattern = "Nov(\\.?)"
)
#str_extract usuario
#str_locate usuario[1:7]
#detect true
str_extract(
string = c("Nov", "Nov.", "November", "Noventa", "Noviembre"),
pattern = "Nov(\\.?)"
)
#str_extract usuario
#str_locate usuario[1:7]
#detect true
str_extract(
string = c("Nov", "Nov.", "November", "Noventa", "Noviembre"),
pattern = "Nov(\\.|ember|iembre)?$"
)
#str_extract usuario
#str_locate usuario[1:7]
#detect true
str_extract(
string = c("Nov", "Nov.", "November", "Noventa", "Noviembre"),
pattern = "^[nN]ov(\\.|ember|iembre)?$"
)
str_locate(
string = c("Nov", "Nov.", "November", "Noventa", "Noviembre"),
pattern = "^[nN]ov(\\.|ember|iembre)?$"
)
str_detect(
string = c("Nov", "Nov.", "November", "Noventa", "Noviembre"),
pattern = "^[nN]ov(\\.|ember|iembre)?$"
)
df <- data.frame(
mes = c("Nov", "ov.", "November", "Noventa", "Noviembre"),
stringsAsFactors = FALSE
)
df[index,]
df <- data.frame(
mes = c("Nov", "nov.", "November", "Noventa", "Noviembre"),
anio = c(1,2,3,4,5)
stringsAsFactors = FALSE
)
df <- data.frame(
mes = c("Nov", "nov.", "November", "Noventa", "Noviembre"),
anio = c(1,2,3,4,5),
stringsAsFactors = FALSE
)
df[index,]
df[index, ]
?index
index =str_detect(
string = c("Nov", "Nov.", "November", "Noventa", "Noviembre"),
pattern = "^[nN]ov(\\.|ember|iembre)?$"
)
df <- data.frame(
mes = c("Nov", "nov.", "November", "Noventa", "Noviembre"),
anio = c(1,2,3,4,5),
stringsAsFactors = FALSE
)
df[index, ]
df[index, ]
df_new = df[index, ] %>% dplyr::mutate(mes ="Noviembre")
df_new
## year with or without century
str_extract(
string = c("2019", "19", "2015", "10", "08", "96", "69", "1975"),
pattern = "(20?00-20?19)"
)
## year with or without century
str_extract(
string = c("2019", "19", "2015", "10", "08", "96", "69", "1975"),
pattern = "[^(20)?$00-^(20)?19$]"
)
## year with or without century
str_extract(
string = c("2019", "19", "2015", "10", "08", "96", "69", "1975"),
pattern = "[^(20)?00$-^(20)?19$]"
)
## year with or without century
str_extract(
string = c("2019", "19", "2015", "10", "08", "96", "69", "1975", "2002"),
pattern = "^(20)?00$-^(20)?19$"
)
## year with or without century
str_extract(
string = c("2019", "19", "2015", "10", "08", "96", "69", "1975", "2002"),
pattern = "^(20)?[0-1]\\d$"
)
## year with or without century
str_detect(
string = c("2019", "19", "2015", "10", "08", "96", "69", "1975", "2002"),
pattern = "^(20)?[0-1]\\d$"
)
# 1. Placas de vehículo partícular
str_detect(
string = c("P201GMF", "P345GAD", "P562GED", "P345GGG"),
pattern = "^P[0-9]{3}"
)
# 1. Placas de vehículo partícular
library(stringr)
str_detect(
string = c("P201GMF", "P345GAD", "P562GED", "P345GGG"),
pattern = "^P[0-9]{3}"
)
str_detect(
string = c("P2901GMF", "P345GAD", "P562GED", "P345GGG"),
pattern = "^P[0-9]{3}"
)
str_detect(
string = c("G201GMF", "P345GAD", "P562GED", "P345GGG"),
pattern = "^P[0-9]{3}"
)
str_detect(
string = c("G201GMF", "P345GAD", "P562GED", "P345GGG", "P35445GYH"),
pattern = "^P[0-9]{3}"
)
str_detect(
string = c("G201GMF", "P345GAD", "P562GED", "P345GGG", "P35445GYH"),
pattern = "^P[0-9][0-9][0-9]"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P562GED", "P345GGG", "P35445GYH"),
pattern = "^P[0-9][0-9][0-9]$"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P562GED", "P345GGG", "P35445GYH"),
pattern = "^P[0-9][0-9][0-9]"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P562GED", "P345GGG", "P35445GYH"),
pattern = "^P[0-9][0-9][0-9][[A-Z]^AEIOU[a-z]"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P562GED", "P345GGG", "P35445GYH"),
pattern = "^P[0-9][0-9][0-9][[A-Z]^AEIOU[a-z]]"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P562GED", "P345GGG", "P35445GYH"),
pattern = "^P[0-9]{3}[[A-Z]^AEIOU[a-z]]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P562GED", "P345GhG", "P35445GYH"),
pattern = "^P[0-9]{3}[[A-Z]^AEIOU[a-z]]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P562GoED", "P345GhG", "P35445GYH"),
pattern = "^P[0-9]{3}[[A-Z]^AEIOU[a-z]]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P5652GoED", "P345GhG", "P35445GYH"),
pattern = "^P[0-9]{3}[[A-Z]^AEIOU[a-z]]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P5652GoED", "P345GhG", "P35445GYH"),
pattern = "^P[0-9]{3}[[A-Z]^AEIOU^[a-z]]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P5652GoED", "P345GhG", "P35445GYH"),
pattern = "^P[0-9]{3}[[A-Z]^AEIOU|[a-z]]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P5652GoED", "P345GhG", "P35445GYH"),
pattern = "^P[0-9]{3}[A-Z]^AEIOU|[a-z]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[A-Z]^AEIOU|[a-z]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[A-Z]^AEIOU|[A-Z]^[a-z]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[A-Z][^AEIOU|[A-Z]]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[A-Z][^AEIOU|[a-z]]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[A-Z][^AEIOU][^[a-z]]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[A-Z][^AEIOU|[a-z]]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[A-Z][^AEIOU[a-z]]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[A-Z][^AEIOU]{3}"
)
str_detect(
string = c("GA201GMF", "PA345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]][^AEIOU]{3}"
)
str_detect(
string = c("P201GMF", "PA345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]][^AEIOU]{3}"
)
str_detect(
string = c("P201GMF", "PA345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]]{3}"
)
str_detect(
string = c("P201GMF", "PA345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]^AEIOU]{3}"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]^AEIOU]{3}"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]]{3}"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]][^AEIOU]{3}"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[:?AEIOU[:upper:]]{3}"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}([[:upper:]]([^AEIOUY])){3}"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]][^AEIOUY]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]][^-AEIOUY]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}([[:upper:]][^-AEIOUY]){3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}([[:upper:]][^AEIOUY]){3}$"
)
#2. Archivo es de tipo pdf o jpg
str_detect(
string = c("mf456.pdf", "P345GAD.jpg", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]][^AEIOUY]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]][^AEIOU]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]]{3}[^AEIOU]$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]][^AEIOU]$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]^AEIOU]$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]][^AEIOU]$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]][^(AEIOU)]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]][^A]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[:upper:]]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[A-Z[^(AEIOU)]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[A-Z[^(AEIOU)]]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[[:upper:]][^(AEIOU)]]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[[:upper:]][^AEIOU]]{3}$"
)
# 1. Placas de vehículo partícular
library(stringr)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[[A-Z][^AEIOU]]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[?=(A-Z)[^AEIOU]]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[^AEIOU]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[^AEIOU[A-Z]]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[^AEIOU]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}([[A-Z]^AEIOU){3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}([A-Z]^AEIOU){3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}([A-Z][^AEIOU]){3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[A-Z][^AEIOU]{3}$"
)
# 1. Placas de vehículo partícular
library(stringr)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}[:upper:][^AEIOU]{3}$"
)
#2. Archivo es de tipo pdf o jpg
str_detect(
string = c("mf456.pdf", "P345GAD.jpg", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "\d"
)
#2. Archivo es de tipo pdf o jpg
str_detect(
string = c("mf456.pdf", "P345GAD.jpg", "P5652GoED.PDF", "P345GhG","P345GYH", "P35445GYH"),
pattern = "\d(.PDF|.JPG|.pdf.|jpg"
)
#2. Archivo es de tipo pdf o jpg
str_detect(
string = c("mf456.pdf", "P345GAD.jpg", "P5652GoED.PDF", "P345GhG","P345GYH", "P35445GYH"),
pattern = "\d(.PDF|.JPG|.pdf.|jpg"
)
#2. Archivo es de tipo pdf o jpg
str_detect(
string = c("mf456.pdf", "P345GAD.jpg", "P5652GoED.PDF", "P345GhG","P345GYH", "P35445GYH"),
pattern = "\\d(.PDF|.JPG|.pdf.|jpg"
)
#2. Archivo es de tipo pdf o jpg
str_detect(
string = c("mf456.pdf", "P345GAD.jpg", "P5652GoED.PDF", "P345GhG","P345GYH", "P35445GYH"),
pattern = "\\.d(.PDF|.JPG|.pdf.|jpg"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}\[:upper:][^AEIOU]{3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}\\[:upper:][^AEIOU]{3}$"
)
#2. Archivo es de tipo pdf o jpg
str_detect(
string = c("mf456.pdf", "P345GAD.jpg", "P5652GoED.PDF", "P345GhG","P345GYH", "P35445GYH"),
pattern = "[[:alnum:]]?PDF|.JPG|.pdf.|jpg"
)
#2. Archivo es de tipo pdf o jpg
str_detect(
string = c("mf456.pdf", "P345GAD.jpg", "P5652GoED.PDF", "P345GhG","P345GYH", "P35445GYH"),
pattern = "[[:alnum:]](.PDF|.JPG|.pdf.|jpg)"
)
#2. Archivo es de tipo pdf o jpg
str_detect(
string = c("mf456.pdf", "P345GAD.jpg", "P5652GoED.PDF", "P345GhG","P345GYH", "P35445GYH"),
pattern = "[[:alnum:]](.PDF|.JPG|.pdf|.jpg)"
)
#2. Archivo es de tipo pdf o jpg
str_detect(
string = c("mf_456.pdf", "P345GAD.jpg", "P5652GoED.PDF", "P345GhG","P345GYH", "P35445GYH"),
pattern = "[[:alnum:]](.PDF|.JPG|.pdf|.jpg)"
)
#3. Validar contraseñas de correo.Caracter especial, numero y mayúscula
str_detect(
string = c("Maf5gd%", "Mafer$", "Maf45t%", "mffer4"),
pattern = "\d*[0-9]*[[:punct:]]*"
)
#3. Validar contraseñas de correo.Caracter especial, numero y mayúscula
str_detect(
string = c("Maf5gd%", "Mafer$", "Maf45t%", "mffer4"),
pattern = "(\d*[0-9]*[[:punct:]]*)"
)
#3. Validar contraseñas de correo.Caracter especial, numero y mayúscula
str_detect(
string = c("Maf5gd%", "Mafer$", "Maf45t%", "mffer4"),
pattern = "(\\d*[0-9]*[[:punct:]]*)"
)
#3. Validar contraseñas de correo.Caracter especial, numero y mayúscula
str_detect(
string = c("Maf5gd%", "Mafer$", "Maf45t%", "mffer4"),
pattern = "([A-Z]+[0-9]+[[:punct:]]+)"
)
#3. Validar contraseñas de correo.Caracter especial, numero y mayúscula
str_detect(
string = c("Maf5gd%", "Mafer$", "Maf45t%", "mffer4"),
pattern = "([[:upper:]]+\\d+[[:punct:]]+)"
)
#3. Validar contraseñas de correo.Caracter especial, numero y mayúscula
str_detect(
string = c("Maf5gd%", "Mafer$", "Maf45t%", "mffer4"),
pattern = "([[:upper:]]+\\d+[[:punct:]]+){8}"
)
#3. Validar contraseñas de correoCaracter especial, numero y mayúscula
str_detect(
string = c("Maf5gd%", "Mafer$", "Maf45t%", "mffer4"),
pattern = "(\\[[:upper:]]+\\d+\\[[:punct:]]+){8}"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}([:upper:][^AEIOU]){3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^(P[0-9]){3}([:upper:][^AEIOU]){3}$"
)
str_detect(
string = c("P201GMF", "P345GAD", "P5652GoED", "P345GhG","P345GYH", "P35445GYH"),
pattern = "^P[0-9]{3}([:upper:][^AEIOU]){3}$"
)
#2. Archivo es de tipo pdf o jpg
str_detect(
string = c("mf_456.pdf", "P345GAD.jpg", "P5652GoED.PDF", "P345GhG","P345GYH", "P35445GYH"),
pattern = "[[:alnum:]](.PDF|.JPG|.pdf|.jpg)"
)
#3. Validar contraseñas de correoCaracter especial, numero y mayúscula
str_detect(
string = c("Maf5gd%", "Mafer$", "Maf45t%", "mffer4"),
pattern = "(\\[[:upper:]]+\\d+\\[[:punct:]]+){8}"
)
#3. Validar contraseñas de correoCaracter especial, numero y mayúscula
str_detect(
string = c("Maf5gd%", "Mafer$", "Maf45t%", "mffer4"),
pattern = "(\\[[:upper:]]+\\d+\\[[:punct:]]+)"
)
#3. Validar contraseñas de correoCaracter especial, numero y mayúscula
str_detect(
string = c("Maf5gd%", "Mafer$", "Maf45t%", "mffer4"),
pattern = "[[:upper:]]+\\d+\\[[:punct:]]+"
)
#3. Validar contraseñas de correoCaracter especial, numero y mayúscula
str_detect(
string = c("Maf5gd%", "Mafer$", "Maf45t%", "mffer4"),
pattern = "[[:upper:]]+\\d+[[:punct:]]+"
)
