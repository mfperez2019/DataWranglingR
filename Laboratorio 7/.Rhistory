fijo_pickup <- datos %>% filter(tipo =="Pickup") %>% summarise (ingreso = sum(costofijo))
TotalPickup <- data.frame(ingreso_pickup, porcentaje_ingresos = ingreso_pickup/sum(datos$factura), costo_pickup , directo_pickup, fijo_pickup)
TotalPickup
ingreso_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(factura))
costo_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(costo))
directo_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(costodirecto))
fijo_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(costofijo))
TotalMoto <- data.frame(ingreso_Moto, porcentaje_ingresos = ingreso_Moto/sum(datos$factura), costo_Moto , directo_Moto, fijo_Moto)
TotalMoto
library(ggplot2)
library(plotly)
tarifas<- datos %>% select(factura, Cod, height) %>% group_by(Cod, height) %>% summarise(mean = mean(factura), min = min(factura), max = max(factura))
tarifas
tarifas$Cod <- as.character(tarifas$Cod)
ggplot(data = tarifas, aes(x = height, y = mean, fill = Cod))+geom_bar(stat='identity', position = 'dodge')
#Son aceptadas por el cliente? Tenemos pérdidas?
library(lubridate)
datos %>% group_by(month(Fecha)) %>% summarise(Totalingresos =sum(ingresos))
#Son aceptadas por el cliente? Tenemos pérdidas?
library(lubridate)
datos <- datos %>% mutate(ingresos = factura - costo)
datos %>% group_by(month(Fecha)) %>% summarise(Totalingresos =sum(ingresos))
posibleperdida <- datos %>% filter(ingresos == 5) %>% group_by(Cod) %>% summarise(count = n())
ggplot(data = posibleperdida, aes(x ="", y = count, fill = Cod)) +
geom_bar(position = 'dodge', stat = 'identity')
masganancias <- datos %>% filter(ingresos == 100) %>% group_by(Cod) %>% summarise(count = n())
ggplot(data = masganancias, aes(x ="", y = count, fill = Cod)) +
geom_bar(position = 'dodge', stat = 'identity')
perdidas <- datos %>% filter(ingresos <= 0)
#El mínimo ingreso se tiene cuando es tardado, se hace una revisión, verficación medirdores, o cambio correctivo. y los costos directos son altos, se va en pickup
#Se tienen mayores ganancias cuando es un cambio de fusible, se va en moto y los costos son bajos
#Debo abrir más centros de distribución?
datos$origen <- as.character(datos$origen)
tiempototal <- datos %>% group_by(origen, tiempo) %>% summarise(count = n()) %>% ungroup()
tiempototal
plot_ly(
x = tiempototal$origen,
y = tiempototal$count,
color = tiempototal$tiempo,
type = "bar"
)
datos$ID <- as.character(data$ID)
datos$ID <- as.character(data$ID)
datos$ID <- as.character(datos$ID)
ingresoposte <- datos %>% group_by(ID) %>% summarise(total = sum(factura)) %>% arrange(desc(total)) %>% mutate(porcentaje = 100*total/sum(total))
ingresoposte
postes <- datos %>%
select(ID) %>%
distinct() %>%
count()
postes20 <- postes*0.2
postes20
ingresoposte
clientestotal <- datos %>%
select(ID,factura) %>%
group_by(ID) %>%
summarise(Total = sum(factura)) %>%
arrange(desc(factura))
clientestotal <- datos %>%
select(ID,factura) %>%
group_by(ID) %>%
summarise(Total = sum(factura)) %>%
arrange(desc(factura))
clientestotal <- datos %>%
select(ID,factura) %>%
group_by(ID) %>%
summarise(Total = sum(datos$factura)) %>%
arrange(desc(factura))
clientestotal <- datos %>%
group_by(ID) %>%
summarise(totalfactura = sum(factura)) %>%
arrange(desc(totalfactura))
clientestotal
postes20 <- postes*0.2
postes20
#80% de las ventas
ventas <- datos %>%
select(factura) %>%
sum()
ventas
ventas1 <- ventas*.8
ventas1
#Los que representan el 20% de todo
clientes_20 <- head(clientestotal,14847)
clientes_20
ventas_80 <- clientes_20 %>%
summarise(totalventas= sum(totalfactura))
ventas_80
#el 20% de los clientes representa cuanto porcentaje de las ventas
Porcentaje ventas_80/ventas
#el 20% de los clientes representa cuanto porcentaje de las ventas
Porcentaje <- ventas_80/ventas
Porcentaje
#el 20% de los clientes representa el 54% de las ventas
postes30 <- postes*0.3
postes30
clientes_30 <- head(clientestotal,22271)
ventas_30 <- clientes_30 %>%
summarise(totalventas= sum(totalfactura))
ventas_30
Porcentaje30 <- ventas_30/ventas
Porcentaje30
#El 30% representa el66%
postes40 <- postes*0.4
postes40
clientes_40 <- head(clientestotal,29695)
ventas_40 <- clientes_40 %>%
summarise(totalventas= sum(totalfactura))
ventas_40
Porcentaje40 <- ventas_40/ventas
Porcentaje40
#Recorridos más efectivos
PorTipo <- data %>% group_by(tipo) %>% summarise(count = n(), total = sum(ingresos)) %>% mutate(promedio = total/count) %>%  arrange(desc(promedio))
#Recorridos más efectivos
PorTipo <- datos%>% group_by(tipo) %>% summarise(count = n(), total = sum(ingresos)) %>% mutate(promedio = total/count) %>%  arrange(desc(promedio))
PorCod <- datos%>% group_by(Cod) %>% summarise(count = n(), total = sum(ingresos)) %>% mutate(promedio = total/count) %>%  arrange(desc(promedio))
ggplot(data = PorTipo, aes(x = vehicle, y = promedio, fill = vehicle)) +
geom_bar(stat = 'identity')
#Recorridos más efectivos
PorTipo <- datos%>% group_by(tipo) %>% summarise(count = n(), total = sum(ingresos)) %>% mutate(promedio = total/count) %>%  arrange(desc(promedio))
PorCod <- datos%>% group_by(Cod) %>% summarise(count = n(), total = sum(ingresos)) %>% mutate(promedio = total/count) %>%  arrange(desc(promedio))
ggplot(data = PorTipo, aes(x = tipo, y = promedio, fill = vehicle)) +
geom_bar(stat = 'identity')
ggplot(data = PorTipo, aes(x = tipo, y = promedio, fill = tipo))+
geom_bar(stat = 'identity')
ggplot(data = PorCod, aes(x = Cod,  y = promedio, fill = Cod))+
geom_bar(stat = 'identity')
ggplot(data = PorCod, aes(x = "",  y = promedio, fill = Cod))+
geom_bar(stat = 'identity')
ggplot(data = PorCod, aes(x = " ",  y = promedio, fill = Cod))+
geom_bar(stat = 'identity')
#Recorridos más efectivos
datos$Cod<-as.character(datos$Cod)
ggplot(data = PorCod, aes(x = " ",  y = promedio, fill = Cod))+
geom_bar(stat = 'identity')
ggplot(data = PorCod, aes(x = "Cod",  y = promedio, fill = Cod))+
geom_bar(stat = 'identity')
ggplot(data = PorCod, aes(x = Cod, ,  y = promedio, fill = Cod))+
geom_bar(stat = 'identity')
ggplot(data = PorCod, aes(x = Cod,  y = promedio, fill = Cod))+
geom_bar(stat = 'identity')
datos = data.frame(datos %>% select(ID,factura) %>% group_by(ID) %>% summarise(Total = sum(ingresos)) %>% arrange(desc(Total)))
datos = data.frame(datos %>% select(ID,factura) %>% group_by(ID) %>% summarise(Total = sum(factura)) %>% arrange(desc(Total)))
pareto <- as.data.frame(clientes=clientes_40, factura=ventas_40)
pareto <- data.frame(clientes=clientes_40, factura=ventas_40)
pareto
clientes_40
ggplot(data = clientes_40, aes(x = ID,  y = totalfactura, fill = clientes)) +
geom_line(stat = 'identity')
ggplot(data = clientes_40, aes(x = ID,  y = totalfactura, fill = ID)) +
geom_line(stat = 'identity')
postes <- datos %>%
select(ID) %>%
distinct() %>%
count()
postes <- datos %>%
select(ID) %>%
distinct() %>%
count()
postes
clientes_40
#Gráfica del 40% de los clientes
clientes_60 <- 74239-2695
clientes_60
#Gráfica del 40% de los clientes
clientes_60 <- 74239-29695
clientes_60
44544/74239
clientesgrafica <- c(29695, clientes_60)
procentajegrafica <- c(0.4, 0.6)
clientesgrafica
porcentajegrafica <- c(0.4, 0.6)
plot_ly(
x = tarifas$height,
y = tarifas$mean,
color = tarifas$Cod,
type = "bar"
)
library(ggplot2)
library(plotly)
plot_ly(
x = tarifas$height,
y = tarifas$mean,
color = tarifas$Cod,
type = "bar"
)
estado_de_resultados
estado_de_resultados %>% View()
#Estado de resultados
estado_de_resultados <- data.frame(ventas = sum(datos$factura), costo_de_ventas = sum(datos$costo), costo_directo= sum(datos$costodirecto), costo_fijo = sum(datos$costofijo), ganancias = sum(datos$factura) - sum(datos$costo), porcentajeganancia =sum((datos$factura) - sum(datos$costo))/ventas = sum(datos$factura))
#Estado de resultados
estado_de_resultados <- data.frame(ventas = sum(datos$factura), costo_de_ventas = sum(datos$costo), costo_directo= sum(datos$costodirecto), costo_fijo = sum(datos$costofijo), ganancias = sum(datos$factura) - sum(datos$costo), porcentajeganancia =sum((datos$factura) - sum(datos$costo))/sum(datos$factura))
estado_de_resultados <- t(estado_de_resultados)
colnames(estado_de_resultados) <- c('Ingreso/Costo')
estado_de_resultados %>% View()
#Estado de resultados
estado_de_resultados <- data.frame(ventas = sum(datos$factura), costo_de_ventas = sum(datos$costo), costo_directo= sum(datos$costodirecto), costo_fijo = sum(datos$costofijo), ganancias = sum(datos$factura) - sum(datos$costo), porcentajeganancia =sum((datos$factura) - sum(datos$costo))/sum(datos$factura))
estado_de_resultados <- t(estado_de_resultados)
library(readr)
library(dplyr)
library(lubridate)
datos <- read_csv(file = "lab7/c1.csv")
datos$Fecha <- dmy(datos$Fecha)
library(stringr)
library(tidyr)
library(dplyr)
library(reshape2)
datos$Camion_5 <- str_replace(string = datos$Camion_5, pattern = "^Q\\-$", replacement = "0")
datos$Camion_5 <- str_replace(string = datos$Camion_5, pattern = "^Q", replacement = "0")
datos$Camion_5 <- as.numeric(datos$Camion_5)
datos$Pickup <- str_replace(string = datos$Pickup, pattern = "^Q\\-$", replacement = "0")
datos$Pickup <- str_replace(string = datos$Pickup, pattern = "^Q", replacement = "0")
datos$Pickup <- as.numeric(datos$Pickup)
datos$Moto <- str_replace(string = datos$Moto, pattern = "^Q\\-$", replacement = "0")
datos$Moto <- str_replace(string = datos$Moto, pattern = "^Q", replacement = "0")
datos$Moto <- as.numeric(datos$Moto)
datos <- gather(datos, key = 'tipo', value = 'costo', Camion_5, Pickup, Moto)
datos <- datos %>% filter(datos$costo > 0)
datos$directoCamion_5 <- str_replace(string = datos$directoCamion_5, pattern = "^Q", replacement = "0")
datos$directoCamion_5 <- str_replace(string = datos$directoCamion_5, pattern = "^Q\\-$", replacement = "0")
datos$directoCamion_5 <- as.numeric(datos$directoCamion_5)
datos$directoPickup <- str_replace(string = datos$directoPickup, pattern = "^Q", replacement = "0")
datos$directoPickup <- str_replace(string = datos$directoPickup, pattern = "^Q\\-$", replacement = "0")
datos$directoPickup <- as.numeric(datos$directoPickup)
datos$directoMoto <- str_replace(string = datos$directoMoto, pattern = "^Q", replacement = "0")
datos$directoMoto <- str_replace(string = datos$directoMoto, pattern = "^Q\\-$", replacement = "0")
datos$directoMoto <- as.numeric(datos$directoMoto)
datos$fijoCamion_5 <- str_replace(string = datos$fijoCamion_5, pattern = "^Q", replacement = "0")
datos$fijoCamion_5 <- str_replace(string = datos$fijoCamion_5, pattern = "^Q\\-$", replacement = "0")
datos$fijoCamion_5 <- as.numeric(datos$fijoCamion_5)
datos$fijoPickup <- str_replace(string = datos$fijoPickup, pattern = "^Q", replacement = "0")
datos$fijoPickup <- str_replace(string = datos$fijoPickup, pattern = "^Q\\-$", replacement = "0")
datos$fijoPickup <- as.numeric(datos$fijoPickup)
datos$fijoMoto <- str_replace(string = datos$fijoMoto, pattern = "^Q", replacement = "0")
datos$fijoMoto <- str_replace(string = datos$fijoMoto, pattern = "^Q\\-$", replacement = "0")
datos$fijoMoto <- as.numeric(datos$fijoMoto)
datos$factura <- str_replace(string = datos$factura, pattern = "^Q", replacement = "0")
datos$factura <- str_replace(string = datos$factura, pattern = "^Q\\-$", replacement = "0")
datos$factura <- as.numeric(datos$factura)
datos <- gather(datos, key = 'tipo', value = 'costodirecto', directoCamion_5, directoPickup, directoMoto)
datos <- datos %>% filter(datos$costodirecto > 0)
datos <- gather(datos, key = 'tipo', value = 'costofijo', fijoCamion_5, fijoPickup, fijoMoto)
datos <- datos %>% filter(datos$costofijo > 0)
names(datos)[names(datos) == "may-30"] <- "5-30"
datos <- gather(datos, key = 'tiempo', value = 'minutos', `5-30`, `30-45`, `45-75`, `75-120`, `120+`)
datos <- drop_na(datos)
datos$tipo <- substr(datos$tipo, 5,10)
datos <- datos %>% select(Fecha, ID, Cod, height, Lat, Long, factura, tipo, origen, costo, costodirecto, costofijo, tiempo)
datos %>% View()
library(tidyr)
library(dplyr)
library(reshape2)
#Estado de resultados
estado_de_resultados <- data.frame(ventas = sum(datos$factura), costo_de_ventas = sum(datos$costo), costo_directo= sum(datos$costodirecto), costo_fijo = sum(datos$costofijo), ganancias = sum(datos$factura) - sum(datos$costo), porcentajeganancia =sum((datos$factura) - sum(datos$costo))/sum(datos$factura))
estado_de_resultados <- t(estado_de_resultados)
colnames(estado_de_resultados) <- c('Ingreso/Costo')
estado_de_resultados %>% View()
#Estado de resultados
estado_de_resultados <- data.frame(ventas = sum(datos$factura), costo_de_ventas = sum(datos$costo), costo_directo= sum(datos$costodirecto), costo_fijo = sum(datos$costofijo), ganancias = sum(datos$factura) - sum(datos$costo), porcentajeganancia =sum((datos$factura) - sum(datos$costo))/(sum(datos$factura)))
estado_de_resultados <- t(estado_de_resultados)
colnames(estado_de_resultados) <- c('Ingreso/Costo')
estado_de_resultados %>% View()
#Estado de resultados
estado_de_resultados <- data.frame(ventas = sum(datos$factura), costo_de_ventas = sum(datos$costo), costo_directo= sum(datos$costodirecto), costo_fijo = sum(datos$costofijo), ganancias = sum(datos$factura) - sum(datos$costo), porcentajeganancia =(sum(datos$factura) - sum(datos$costo))/(sum(datos$factura)))
estado_de_resultados <- t(estado_de_resultados)
colnames(estado_de_resultados) <- c('Ingreso/Costo')
estado_de_resultados %>% View()
#Estado de resultados
estado_de_resultados <- data.frame(ventas = sum(datos$factura), costo_de_ventas = sum(datos$costo), costo_directo= sum(datos$costodirecto), costo_fijo = sum(datos$costofijo), ganancias = sum(datos$factura) - sum(datos$costo), porcentajeganancia =(sum(datos$factura) - sum(datos$costo))/(sum(datos$factura)))
estado_de_resultados <- t(estado_de_resultados)
colnames(estado_de_resultados) <- c('Ingreso/Costo')
estado_de_resultados %>% View()
estado_de_resultados
#Estado de resultados
estado_de_resultados <- data.frame(ventas = sum(datos$factura), costo_de_ventas = sum(datos$costo), costo_directo= sum(datos$costodirecto), costo_fijo = sum(datos$costofijo), ganancias = sum(datos$factura) - sum(datos$costo))
estado_de_resultados <- t(estado_de_resultados)
colnames(estado_de_resultados) <- c('Ingreso/Costo')
estado_de_resultados
#Estado de resultados
estado_de_resultados <- data.frame(ventas = sum(datos$factura), costo_de_ventas = sum(datos$costo), costo_directo= sum(datos$costodirecto), costo_fijo = sum(datos$costofijo), ganancias = sum(datos$factura) - sum(datos$costo), margen = (sum(datos$factura) - sum(datos$costo))/sum(datos$factura))
estado_de_resultados <- t(estado_de_resultados)
colnames(estado_de_resultados) <- c('Ingreso/Costo')
estado_de_resultados %>% View()
#Estado de resultados
estado_de_resultados <- data.frame(ventas = sum(datos$factura), costo_de_ventas = sum(datos$costo), costo_directo= sum(datos$costodirecto), costo_fijo = sum(datos$costofijo), ganancias = sum(datos$factura) - sum(datos$costo))
estado_de_resultados <- t(estado_de_resultados)
colnames(estado_de_resultados) <- c('Ingreso/Costo')
estado_de_resultados %>% View()
ingreso_camion <- datos  %>% filter(tipo =="Camion") %>% summarise (ingreso = sum(factura))
ingreso_camion
costo_camion <- datos %>% filter(tipo =="Camion") %>% summarise (ingreso = sum(costo))
directo_camion <- datos %>% filter(tipo =="Camion") %>% summarise (ingreso = sum(costodirecto))
fijo_camion <- datos %>% filter(tipo =="Camion") %>% summarise (ingreso = sum(costofijo))
TotalCamion <- data.frame(ingreso_camion, porcentaje_ingresos = ingreso_camion/sum(datos$factura), costo_camion , directo_camion, fijo_camion)
TotalCamion
ingreso_pickup <- datos %>% filter(tipo =="Pickup") %>% summarise (ingreso = sum(factura))
costo_pickup <- datos %>% filter(tipo =="Pickup") %>% summarise (ingreso = sum(costo))
directo_pickup <- datos %>% filter(tipo =="Pickup") %>% summarise (ingreso = sum(costodirecto))
fijo_pickup <- datos %>% filter(tipo =="Pickup") %>% summarise (ingreso = sum(costofijo))
TotalPickup <- data.frame(ingreso_pickup, porcentaje_ingresos = ingreso_pickup/sum(datos$factura), costo_pickup , directo_pickup, fijo_pickup)
TotalPickup
ingreso_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(factura))
costo_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(costo))
directo_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(costodirecto))
fijo_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(costofijo))
TotalMoto <- data.frame(ingreso_Moto, porcentaje_ingresos = ingreso_Moto/sum(datos$factura), costo_Moto , directo_Moto, fijo_Moto)
TotalMoto
ingreso_camion <- datos  %>% filter(tipo =="Camion") %>% summarise (ingreso = sum(factura))
ingreso_camion
costo_camion <- datos %>% filter(tipo =="Camion") %>% summarise (ingreso = sum(costo))
directo_camion <- datos %>% filter(tipo =="Camion") %>% summarise (ingreso = sum(costodirecto))
fijo_camion <- datos %>% filter(tipo =="Camion") %>% summarise (ingreso = sum(costofijo))
TotalCamion <- data.frame(ingreso_camion, porcentaje_ingresos = ingreso_camion/sum(datos$factura), costo_camion , directo_camion, fijo_camion)
TotalCamion
ingreso_pickup <- datos %>% filter(tipo =="Pickup") %>% summarise (ingreso = sum(factura))
costo_pickup <- datos %>% filter(tipo =="Pickup") %>% summarise (ingreso = sum(costo))
directo_pickup <- datos %>% filter(tipo =="Pickup") %>% summarise (ingreso = sum(costodirecto))
fijo_pickup <- datos %>% filter(tipo =="Pickup") %>% summarise (ingreso = sum(costofijo))
TotalPickup <- data.frame(ingreso_pickup, porcentaje_ingresos = ingreso_pickup/sum(datos$factura), costo_pickup , directo_pickup, fijo_pickup)
TotalPickup
ingreso_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(factura))
costo_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(costo))
directo_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(costodirecto))
fijo_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(costofijo))
TotalMoto <- data.frame(ingreso_Moto, porcentaje_ingresos = ingreso_Moto/sum(datos$factura), costo_Moto , directo_Moto, fijo_Moto)
TotalMoto
TotalCamion %>% View()
#Desglosado
ingreso_camion <- datos  %>% filter(tipo =="Camion") %>% summarise (ingreso = sum(factura))
ingreso_camion
costo_camion <- datos %>% filter(tipo =="Camion") %>% summarise (ingreso = sum(costo))
directo_camion <- datos %>% filter(tipo =="Camion") %>% summarise (ingreso = sum(costodirecto))
fijo_camion <- datos %>% filter(tipo =="Camion") %>% summarise (ingreso = sum(costofijo))
TotalCamion <- data.frame(ingreso_camion, porcentaje_ingresos = ingreso_camion/sum(datos$factura), costo_camion , directo_camion, fijo_camion)
TotalCamion
ingreso_pickup <- datos %>% filter(tipo =="Pickup") %>% summarise (ingreso = sum(factura))
costo_pickup <- datos %>% filter(tipo =="Pickup") %>% summarise (ingreso = sum(costo))
directo_pickup <- datos %>% filter(tipo =="Pickup") %>% summarise (ingreso = sum(costodirecto))
fijo_pickup <- datos %>% filter(tipo =="Pickup") %>% summarise (ingreso = sum(costofijo))
TotalPickup <- data.frame(ingreso_pickup, porcentaje_ingresos = ingreso_pickup/sum(datos$factura), costo_pickup , directo_pickup, fijo_pickup)
TotalPickup
ingreso_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(factura))
costo_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(costo))
directo_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(costodirecto))
fijo_Moto <- datos %>% filter(tipo =="Moto") %>% summarise (ingreso = sum(costofijo))
TotalMoto <- data.frame(ingreso_Moto, porcentaje_ingresos = ingreso_Moto/sum(datos$factura), costo_Moto , directo_Moto, fijo_Moto)
TotalMoto
ingresosporcod <- datos %>% group_by(Cod) %>% summarise (ingreso = sum(factura))
ingresosporcod
ingresosporcod <- datos %>% group_by(Cod) %>% summarise (ingreso = sum(factura)) %>% desc(ingreso)
ingresosporcod <- datos %>% group_by(Cod) %>% summarise (ingreso = sum(factura))
ingresosporcod
ingresosporcod <- datos %>% group_by(Cod) %>% summarise (ingreso = sum(factura))  %>% desc(ingreso)
ingresosporcod <- datos %>% group_by(Cod) %>% summarise (ingreso = sum(factura))  %>% order_by(desc(ingreso))
ingresosporcod <- datos %>% group_by(Cod) %>% summarise (ingreso = sum(factura))  %>% order_by(desc(ingresosporcod$ingreso))
ingresosporcod %>% order_by(ingreso)
ingresosporcod <- datos %>% group_by(Cod) %>% summarise (ingreso = sum(factura)) %>% mutate(porcentaje = ingreso/sum(datos$factura))
ingresosporcod
ingresosporcod %>% View()
tarifas<- datos %>% select(Fecha, factura, Cod, height) %>% filter(year(Fecha)==2017) %>% group_by(Cod, height) %>% summarise(mean = mean(factura), min = min(factura), max = max(factura))
tarifas
tarifas %>% View()
datos %>% View()
tarifas %>% View()
tarifas$Cod <- as.character(tarifas$Cod)
plot_ly(
x = tarifas$height,
y = tarifas$mean,
color = tarifas$Cod,
type = "bar"
)
#Son aceptadas por el cliente? Tenemos pérdidas?
library(lubridate)
datos <- datos %>% mutate(ingresos = factura - costo)
datos %>% group_by(month(Fecha)) %>% summarise(Totalingresos =sum(ingresos))
posibleperdida <- datos %>% filter(ingresos == 5) %>% group_by(Cod) %>% summarise(count = n())
ggplot(data = posibleperdida, aes(x ="", y = count, fill = Cod)) +
geom_bar(position = 'dodge', stat = 'identity')
plot_ly(
x = posibleperdida$Cod,
y = posibleperdida$count,
color = posibleperdida$Cod,
type = "bar"
)
datos %>% group_by(month(Fecha)) %>% summarise(Totalingresos =sum(ingresos))
aceptacion <- datos %>% group_by(month(Fecha)) %>% summarise(Totalingresos =sum(ingresos))
plot_ly(
x = aceptacion$month(Fecha),
y = aceptacion$Totalingresos,
color = aceptacion$month(Fecha),
type = "bar"
)
aceptacion <- datos %>% group_by(month =month(Fecha)) %>% summarise(Totalingresos =sum(ingresos))
aceptacion
plot_ly(
x = aceptacion$month,
y = aceptacion$Totalingresos,
color = aceptacion$month,
type = "bar"
)
aceptacion$month <- as.character(aceptacion$month)
plot_ly(
x = aceptacion$month,
y = aceptacion$Totalingresos,
color = aceptacion$month,
type = "bar"
)
plot_ly(
x = posibleperdida$Cod,
y = posibleperdida$count,
color = posibleperdida$Cod,
type = "bar"
)
clientes_40
datos$ID <- as.character(datos$ID)
ingresoposte <- datos %>% group_by(ID) %>% summarise(total = sum(factura)) %>% arrange(desc(total)) %>% mutate(porcentaje = 100*total/sum(total))
ingresoposte
postes <- datos %>%
select(ID) %>%
distinct() %>%
count()
postes
#80% de las ventas
ventas <- datos %>%
select(factura) %>%
sum()
ventas
ventas1 <- ventas*.8
ventas1
clientestotal <- datos %>%
group_by(ID) %>%
summarise(totalfactura = sum(factura)) %>%
arrange(desc(totalfactura))
clientestotal
#Los que representan el 20% de todo
postes20 <- postes*0.2
postes20
clientes_20 <- head(clientestotal,14847)
clientes_20
ventas_80 <- clientes_20 %>%
summarise(totalventas= sum(totalfactura))
ventas_80
#el 20% de los clientes representa cuanto porcentaje de las ventas
Porcentaje <- ventas_80/ventas
Porcentaje
#el 20% de los clientes representa el 54% de las ventas
postes30 <- postes*0.3
postes30
clientes_30 <- head(clientestotal,22271)
ventas_30 <- clientes_30 %>%
summarise(totalventas= sum(totalfactura))
ventas_30
Porcentaje30 <- ventas_30/ventas
Porcentaje30
#El 30% representa el66%
postes40 <- postes*0.4
postes40
clientes_40 <- head(clientestotal,29695)
ventas_40 <- clientes_40 %>%
summarise(totalventas= sum(totalfactura))
ventas_40
Porcentaje40 <- ventas_40/ventas
Porcentaje40
clientes_40
clientes_60 <- 74239-29695
clientes_60
clientesgrafica <- c(29695, clientes_60)
clientesgrafica
porcentajegrafica <- c(0.4, 0.6)
graf <- data.frame(clientes = clientesgrafica, porcentaje = porcentajegrafica)
ggplot(data = graf, aes(x = clientes,  y = porcentaje, fill = clientes))+
geom_bar(stat = 'identity')
graf$clientes <- as.character(graf$cliente)
ggplot(data = graf, aes(x = clientes,  y = porcentaje, fill = clientes))+
geom_bar(stat = 'identity')
clientes_40
#Gráfica del 40% de los clientes
clientes_60 <- 74239-29695
clientes_60
clientesgrafica <- c(29695, clientes_60)
clientesgrafica
porcentajegrafica <- c(0.75, 0.25)
graf <- data.frame(clientes = clientesgrafica, porcentaje = porcentajegrafica)
graf$clientes <- as.character(graf$cliente)
ggplot(data = graf, aes(x = clientes,  y = porcentaje, fill = clientes))+
geom_bar(stat = 'identity')
#Recorridos más efectivos
datos$Cod<-as.character(datos$Cod)
PorTipo <- datos%>% group_by(tipo) %>% summarise(count = n(), total = sum(ingresos)) %>% mutate(promedio = total/count) %>%  arrange(desc(promedio))
PorCod <- datos%>% group_by(Cod) %>% summarise(count = n(), total = sum(ingresos)) %>% mutate(promedio = total/count) %>%  arrange(desc(promedio))
ggplot(data = PorTipo, aes(x = tipo, y = promedio, fill = tipo))+
geom_bar(stat = 'identity')
ggplot(data = PorCod, aes(x = Cod,  y = promedio, fill = Cod))+
geom_bar(stat = 'identity')
plot_ly(
x = PorTipo$tipo,
y = PorTipo$promedio,
color = PorTipo$tipo,
type = "bar"
)
plot_ly(
x = PorCod$Cod,
y = PorCod$promedio,
color = PorCod$Cod,
type = "bar"
)
plot_ly(
x = PorTipo$tipo,
y = PorTipo$promedio,
color = PorTipo$tipo,
type = "bar"
)
