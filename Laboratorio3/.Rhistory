arrange(desc(TotalQ))
#Los que representan el 20% de todo
clientes_20 <- head(clientestotal,3)
clientes_20
#Luego cuanto es el 80% de los ingresos
ventas_80 <- clientes_20 %>%
summarise(ventas= sum(TotalQ))
ventas_80
#Para ver el porcentaje que representa los tres negocios de los ingresos
porcentaje <- ventas_80/ventas*100
porcentaje
resultado <- data.frame(ventas_80,porcentaje)
resultado
#Los tres clientes principales representan solo el 35% de los ingresos totales. El pinche, el gallo negro y pollopinulito
#Mejores Pilotos y más eficientes
UNIDAD <-datos %>%  select(UNIDAD) %>% group_by(UNIDAD) %>% distinct() %>% arrange(desc(UNIDAD))
UNIDAD
ingreso_unidad <- datos %>%
select(UNIDAD,Q) %>%
group_by(UNIDAD) %>%
summarise(TotalQ = sum(Q)) %>%
arrange(desc(TotalQ))
ingreso_unidad
numero_viajes <- datos %>%
select(UNIDAD,COD_VIAJE) %>%
group_by(UNIDAD) %>%
summarise(viajes = n()) %>%
arrange(desc(viajes))
numero_viajes
ingreso_viaje <- datos %>%
select(UNIDAD,Q, COD_VIAJE) %>%
group_by(UNIDAD) %>%
summarise(TotalQ = sum(Q)/n()) %>%
arrange((TotalQ))
ingreso_viaje
grafica1 = datos %>% select(UNIDAD, CANTIDAD, COD_VIAJE) %>% group_by(UNIDAD) %>% summarise(TotalQ = sum(Q)/n(), arrange(TotalQ))
grafica1 = datos %>% select(UNIDAD, CANTIDAD, COD_VIAJE) %>% group_by(UNIDAD) %>% summarise(TotalQ = sum(Q)/n(), arrange(TotalQ))
grafica1 = datos %>% select(UNIDAD, CANTIDAD, Q, COD_VIAJE) %>% group_by(UNIDAD) %>% summarise(TotalQ = sum(Q)/n(), arrange(TotalQ))
ggplot(ingreso_viaje, aes(fill=UNIDAD, y=TotalQ, x=UNIDAD)) +
geom_bar(position="dodge", stat="identity")
#Eficiencia de los pilotos en base a los viajes
viajes_piloto <- datos %>%
select(PILOTO,COD_VIAJE) %>%
group_by(PILOTO) %>%
summarise(viajes = n()) %>%
arrange(desc(viajes))
viajes_piloto
#Eficiencia de los pilotos en base a los viajes
total_viajes <- datos %>% (COD_VIAJE) %>% summarise(total = n())
viajes_piloto
viajes_piloto <- datos %>%
select(PILOTO,COD_VIAJE) %>%
group_by(PILOTO) %>%
summarise(viajes = n()/2180) %>%
arrange(desc(viajes))
viajes_piloto
ggplot(viajes_piloto, aes(fill=PILOTO, y=viajes, x=PILOTO)) +
geom_bar(position="dodge", stat="identity")
library(readr)
datos <- read_csv(file = "lab3/tabla_completa.csv",col_names = TRUE, locale = locale(encoding = "latin1"))
datos$X1 <- NULL
datos
#Mejores Pilotos y más eficientes
ingreso_unidad <- datos %>%
select(UNIDAD,Q) %>%
group_by(UNIDAD) %>%
summarise(TotalQ = sum(Q)) %>%
arrange(desc(TotalQ))
ingreso_unidad
numero_viajes <- datos %>%
select(UNIDAD,COD_VIAJE) %>%
group_by(UNIDAD) %>%
summarise(viajes = n()) %>%
arrange(desc(viajes))
numero_viajes
ingreso_viaje <- datos %>%
select(UNIDAD,Q, COD_VIAJE) %>%
group_by(UNIDAD) %>%
summarise(TotalQ = sum(Q)/n()) %>%
arrange((TotalQ))
ingreso_viaje
grafica1 = datos %>% select(UNIDAD, CANTIDAD, Q, COD_VIAJE) %>% group_by(UNIDAD) %>% summarise(TotalQ = sum(Q)/n(), arrange(TotalQ))
#Mejores Pilotos y más eficientes
ingreso_unidad <- datos %>%
select(UNIDAD,Q) %>%
group_by(UNIDAD) %>%
summarise(TotalQ = sum(Q)) %>%
arrange(desc(TotalQ))
ingreso_unidad
numero_viajes <- datos %>%
select(UNIDAD,COD_VIAJE) %>%
group_by(UNIDAD) %>%
summarise(viajes = n()) %>%
arrange(desc(viajes))
numero_viajes
ingreso_viaje <- datos %>%
select(UNIDAD,Q, COD_VIAJE) %>%
group_by(UNIDAD) %>%
summarise(TotalQ = sum(Q)/n()) %>%
arrange((TotalQ))
ingreso_viaje
ggplot(ingreso_viaje, aes(fill=UNIDAD, y=TotalQ, x=UNIDAD)) +
geom_bar(position="dodge", stat="identity")
#Eficiencia de los pilotos en base a los viajes
total_viajes <- datos %>% (COD_VIAJE) %>% summarise(total = n())
#Mejores Pilotos y más eficientes
ingreso_unidad <- datos %>%
select(UNIDAD,Q) %>%
group_by(UNIDAD) %>%
summarise(TotalQ = sum(Q)) %>%
arrange(desc(TotalQ))
ingreso_unidad
numero_viajes <- datos %>%
select(UNIDAD,COD_VIAJE) %>%
group_by(UNIDAD) %>%
summarise(viajes = n()) %>%
arrange(desc(viajes))
numero_viajes
ingreso_viaje <- datos %>%
select(UNIDAD,Q, COD_VIAJE) %>%
group_by(UNIDAD) %>%
summarise(TotalQ = sum(Q)/n()) %>%
arrange((TotalQ))
ingreso_viaje
ggplot(ingreso_viaje, aes(fill=UNIDAD, y=TotalQ, x=UNIDAD)) +
geom_bar(position="dodge", stat="identity")
#Eficiencia de los pilotos en base a los viajes
viajes_piloto <- datos %>%
select(PILOTO,COD_VIAJE) %>%
group_by(PILOTO) %>%
summarise(viajes = n()/2180) %>%
arrange(desc(viajes))
viajes_piloto
ggplot(viajes_piloto, aes(fill=PILOTO, y=viajes, x=PILOTO)) +
geom_bar(position="dodge", stat="identity")
#Mejores Pilotos y más eficientes
ingreso_unidad <- datos %>%
select(UNIDAD,Q) %>%
group_by(UNIDAD) %>%
summarise(TotalQ = sum(Q)) %>%
arrange(desc(TotalQ))
ingreso_unidad
numero_viajes <- datos %>%
select(UNIDAD,COD_VIAJE) %>%
group_by(UNIDAD) %>%
summarise(viajes = n()) %>%
arrange(desc(viajes))
numero_viajes
ingreso_viaje <- datos %>%
select(UNIDAD,Q, COD_VIAJE) %>%
group_by(UNIDAD) %>%
summarise(TotalQ = sum(Q)/n()) %>%
arrange((TotalQ))
ingreso_viaje
ggplot(ingreso_viaje, aes(fill=UNIDAD, y=TotalQ, x=UNIDAD)) +
geom_bar(position="dodge", stat="identity")
#Eficiencia de los pilotos en base a los viajes
viajes_piloto <- datos %>%
select(PILOTO,COD_VIAJE) %>%
group_by(PILOTO) %>%
summarise(viajes = n()/2180) %>%
arrange(desc(viajes))
viajes_piloto
ggplot(viajes_piloto, aes(fill=PILOTO, y=viajes, x=PILOTO)) +
geom_bar(position="dodge", stat="identity")
#Mejores Pilotos y más eficientes
library(ggplot2)
ingreso_unidad <- datos %>%
select(UNIDAD,Q) %>%
group_by(UNIDAD) %>%
summarise(TotalQ = sum(Q)) %>%
arrange(desc(TotalQ))
ingreso_unidad
numero_viajes <- datos %>%
select(UNIDAD,COD_VIAJE) %>%
group_by(UNIDAD) %>%
summarise(viajes = n()) %>%
arrange(desc(viajes))
numero_viajes
ingreso_viaje <- datos %>%
select(UNIDAD,Q, COD_VIAJE) %>%
group_by(UNIDAD) %>%
summarise(TotalQ = sum(Q)/n()) %>%
arrange((TotalQ))
ingreso_viaje
ggplot(ingreso_viaje, aes(fill=UNIDAD, y=TotalQ, x=UNIDAD)) +
geom_bar(position="dodge", stat="identity")
#Eficiencia de los pilotos en base a los viajes
viajes_piloto <- datos %>%
select(PILOTO,COD_VIAJE) %>%
group_by(PILOTO) %>%
summarise(viajes = n()/2180) %>%
arrange(desc(viajes))
viajes_piloto
ggplot(viajes_piloto, aes(fill=PILOTO, y=viajes, x=PILOTO)) +
geom_bar(position="dodge", stat="identity")
library(ggplot2)
datos = data.frame(datos %>% select(CLIENTE, Q) %>% group_by(CLIENTE) %>% summarise(Total = sum(Q)) %>% arrange(desc(Total)))
datos <- datos[order(datos$Total, decreasing=TRUE), ]
datos$cumulative <- cumsum(datos$Total)
datos$CLIENTE <- factor(datos$CLIENTE, levels=datos1$CLIENTE)
library(ggplot2)
datos = data.frame(datos %>% select(CLIENTE, Q) %>% group_by(CLIENTE) %>% summarise(Total = sum(Q)) %>% arrange(desc(Total)))
library(ggplot2)
datos = data.frame(datos %>% select(CLIENTE, Q) %>% group_by(CLIENTE) %>% summarise(Total = sum(Q)) %>% arrange(desc(Total)))
library(tidyverse)
library(tidyverse)
library(readr)
players_score <- read_csv(file = "C:/Users/Mafer/Desktop/GitHub/DataWranglingR/Tidy/football-world-cup-2018-dataset/Players_Score.csv")
view(players_score)
players_score$cambio<-str_extract_all(players_score$Apps, "\\([^)]*\\)","")
players_score$cambio<-str_extract_all(players_score$cambio,"[0-9]+")
players_score$Apps<-str_replace_all(players_score$Apps, "\\([^)]*\\)","")
### Volver todas las variables numericas a formato numerico
numbers <- c("age", "Apps", "cambio", "Goals", "Assists", "Yel", "Red", "SpG", "PS", "AerialsWon", "MotM", "Rating")
players_score[numbers] <- lapply(players_score[numbers], as.numeric)
head(players_score) %>% view()
players_score[numbers] <- players_score[numbers] %>% replace_na(list(age=0, Goals=0, Assists=0, Yel=0, Red=0, SpG=0, PS=0, AerialsWon=0, MotM=0, Rating=0, cambio=0))
players_score
filter(players_score, club %in% c("Real Madrid", "Barcelona", age <30))
###Seleccionamos unicamente las columnas de club, edad y filtreamos por club
filter(select(players_score,club,age), club=="Real Madrid")
##Rate entre minuto sobre goal
players_score %>%
mutate(Goal_Rate = Mins/Goals) %>%
arrange(desc(Goal_Rate))
###equipo goleador
players_score %>%
select(club, Goals) %>%
group_by(club) %>%
summarise(team_goals = sum(Goals)) %>%
arrange(desc(team_goals))
players_score %>%
select(player, PS, club)
#### AQUI  EMPIEZA LO EXTRA
#1 Quien es el jugador con el mejor porcentaje de pase y de cual club es
view(players_score)
players_score %>%
select(player,club,PS ) %>%
arrange(desc(PS)) %>%
distinct()
#2. Quien es el jugador que mas veces ha sido Man of Match y su indice de goles por minuto
players_score %>%
select(player,MotM,Goals,Mins ) %>%
mutate(Golespormin = Goals/Mins) %>%
arrange(desc(MotM)) %>%
distinct()
#3 Quien es el jugador mas joven con mas goles anotados a traves de todo el set de datos
players_score %>%
select(player,age,Goals ) %>%
arrange(age) %>%
distinct()
#3 Quien es el jugador mas joven con mas goles anotados a traves de todo el set de datos
players_score %>%
select(player,age,Goals ) %>%
arrange(age, Goals) %>%
distinct()
#3 Quien es el jugador mas joven con mas goles anotados a traves de todo el set de datos
players_score %>%
select(player,age,Goals ) %>%
arrange(age) %>%
arrange(Goals)
#3 Quien es el jugador mas joven con mas goles anotados a traves de todo el set de datos
players_score %>%
select(player,age,Goals ) %>%
arrange(age) %>%
arrange(Goals) %>%
distinct()
#3 Quien es el jugador mas joven con mas goles anotados a traves de todo el set de datos
players_score %>%
select(player,age,Goals ) %>%
arrange(age) %>%
arrange(desc(Goals)) %>%
distinct()
#3 Quien es el jugador mas joven con mas goles anotados a traves de todo el set de datos
players_score %>%
select(player,age,Goals ) %>%
arrange(age) %>%
distinct()
library(tidyverse)
library(readr)
players_score <- read_csv(file = "C:/Users/Mafer/Desktop/GitHub/DataWranglingR/Tidy/football-world-cup-2018-dataset/Players_Score.csv")
view(players_score)
players_score$cambio<-str_extract_all(players_score$Apps, "\\([^)]*\\)","")
players_score$cambio<-str_extract_all(players_score$cambio,"[0-9]+")
players_score$Apps<-str_replace_all(players_score$Apps, "\\([^)]*\\)","")
### Volver todas las variables numericas a formato numerico
numbers <- c("age", "Apps", "cambio", "Goals", "Assists", "Yel", "Red", "SpG", "PS", "AerialsWon", "MotM", "Rating")
players_score[numbers] <- lapply(players_score[numbers], as.numeric)
head(players_score) %>% view()
players_score[numbers] <- players_score[numbers] %>% replace_na(list(age=0, Goals=0, Assists=0, Yel=0, Red=0, SpG=0, PS=0, AerialsWon=0, MotM=0, Rating=0, cambio=0))
players_score
###filter
filter(players_score, club=="Real Madrid", age <30)
filter(players_score, club %in% c("Real Madrid", "Barcelona", age <30))
###prmer filtro pero con pope
players_score %>%
filter(club=="Real Madrid")
###Seleccionamos unicamente las columnas de club, edad y filtreamos por club
filter(select(players_score,club,age), club=="Real Madrid")
##Seleccionemos únicamente las columnas de club y edad y filtremos por club
players_score %>%
select(club,age) %>%
filter(club== "Real Madrid")
##Rate entre minuto sobre goal
players_score %>%
mutate(Goal_Rate = Mins/Goals) %>%
arrange(desc(Goal_Rate))
##Una posible Solución
players_score %>%
filter(Goals > 0) %>%
mutate(Goal_Rate = Mins/Goals) %>%
arrange(desc(Goal_Rate)) %>%
distinct()
###equipo goleador
players_score %>%
select(club, Goals) %>%
group_by(club) %>%
summarise(team_goals = sum(Goals)) %>%
arrange(desc(team_goals))
players_score %>%
select(player, PS, club)
#### AQUI  EMPIEZA LO EXTRA
#1 Quien es el jugador con el mejor porcentaje de pase y de cual club es
view(players_score)
players_score %>%
select(player,club,PS ) %>%
arrange(desc(PS)) %>%
distinct()
#Respuesta: Thiago Silva de 	Paris Saint Germain	con un PS de 96.1
#2 Quien es el jugador que mas veces ha sido Man of Match y su indice de goles por minuto
players_score %>%
select(player,MotM,Goals,Mins ) %>%
mutate(Golespormin = Goals/Mins) %>%
arrange(desc(MotM)) %>%
distinct()
# RESPUESTA: Lionel Messi	que ha sido 22 veces MoM	 y su indice es de	0.0113446780
#3 Quien es el jugador mas joven con mas goles anotados a traves de todo el set de datos
players_score %>%
select(player,age,Goals ) %>%
arrange(age) %>%
distinct()
#RESPUESTA: Rodrygo	de 17 años con 5 goles
#4 Quien es el jugador que entra de cambio mas efectivo al momento de anotar goles
players_score %>%
select(player,Mins,Goals ) %>%
arrange((Mins)) %>%
distinct()
#Respuesta:  Andreas Cornelius y anota 2 goles.
#5. Quien es el jugador que es mas sucio
players_score %>%
select(player,Yel,Red ) %>%
filter(Red >2) %>%
arrange(desc(Yel)) %>%
distinct()
# De los jugadores con 2 tarjetas rojas,  Hassan Yebda y Dusko Tosic que más tarjetas amarillas
#6. Cual es el mejor equipo de todos
players_score %>%
select(club,Goals) %>%
arrange(desc(Goals)) %>%
distinct()
#RESPUESTA: Barcelona tienen más goles
datos %>%  select(CLIENTE, PILOTO, CANTIDAD, UBICACION,MES) %>%
filter(stringr::str_detect(CLIENTE, 'EL PINCHE')) %>%
filter(MES=="08") %>%
group_by(UBICACION)
library(dplyr)
datos %>%  select(CLIENTE, PILOTO, CANTIDAD, UBICACION,MES) %>%
filter(stringr::str_detect(CLIENTE, 'EL PINCHE')) %>%
filter(MES=="08") %>%
group_by(UBICACION) %>%
count(PILOTO)
library(readr)
datos <- read_csv(file = "lab3/tabla_completa.csv",col_names = TRUE, locale = locale(encoding = "latin1"))
datos$X1 <- NULL
datos
summary(datos)
colSums(is.na(datos))
dplyr::glimpse(datos)
library(dplyr)
#Primero hay que saber cuantos pilotos hay
datos %>% select(PILOTO) %>% distinct()
#PILOTOS Angel, Felipe, #Fernando, Hector Aragones, Hector Giron, #Ismael,Juan, Luis, #Pedro
#Con esto quiero saber cuántos viajes hace cada piloto en un mes
empleados <- datos %>%
select(PILOTO, CLIENTE,Q, CANTIDAD, MES, UBICACION, UNIDAD) %>%
filter(MES== "01")%>%
group_by(PILOTO) %>%
count(PILOTO)
empleados
#En Enero se hicieron 192 viajes
#En promedio se hacen 21 viajes por persona
#Hay dos que hacen 25 y 26 y otros que solo hacen 18, 19
#Lo siguiente es para saber el promedio de cantidad y  dinero que recibe casa piloto en un mes
datos %>% select(PILOTO, Q, CANTIDAD, MES) %>%
filter(MES =="01")%>%
group_by(PILOTO) %>%
summarise(Qmedia = mean(Q),Cantmedia = mean(CANTIDAD)) %>%
arrange(desc(Qmedia))
#Para saber si hay que contratar a más personal viendo el numero de viajes que hacen por mes y el dinero que hace en promedio cada uno es muy parecido. Así que yo pensaría que no hay que contratar a nadie más
#Para saber cuanto clientes son
datos %>% select(CLIENTE) %>% group_by(CLIENTE) %>% count(CLIENTE)
#Son 13 clientes
datos %>% select(CLIENTE, Q, CANTIDAD,UNIDAD, MES) %>%
group_by(UNIDAD) %>%
summarise(TOTALUNIDAD = sum(CANTIDAD)) %>%
arrange(desc(TOTALUNIDAD))
#La cantidad mayor es para camiones grandes
#Cantidad de viajes por tipo camion
datos %>% select(CLIENTE, Q, CANTIDAD,UNIDAD, MES) %>%
count(UNIDAD)
#Los viajes: 1211 grandes, 605 pequeños, 364 panel
#Cual cantidad de pedidos está aumentando si la de
datos %>%  select(UNIDAD, Q, CANTIDAD, MES) %>%
filter(UNIDAD== "Camion Grande") %>%
group_by(MES) %>%
summarise(PCANTIDAD=mean(CANTIDAD), TCANTIDAD= sum(CANTIDAD) )
datos %>%  select(UNIDAD, Q, CANTIDAD, MES) %>%
filter(UNIDAD== "Camion Pequeño") %>%
group_by(MES) %>%
summarise(PCANTIDAD=mean(CANTIDAD), TCANTIDAD= sum(CANTIDAD))
datos %>%  select(UNIDAD, Q, CANTIDAD, MES) %>%
filter(UNIDAD== "Panel") %>%
group_by(MES) %>%
summarise(PCANTIDAD=sum(CANTIDAD), TCANTIDAD= sum(CANTIDAD))
datos %>% select(UNIDAD, MES, UBICACION, COD_VIAJE) %>% group_by(UNIDAD, MES) %>% count(UNIDAD) %>% distinct()
datos %>% select(UNIDAD, UBICACION,COD_VIAJE) %>% group_by(UBICACION) %>% summarise(numeroubicacion = n_distinct(COD_VIAJE)) %>% distinct()
datos %>% select(UNIDAD, UBICACION,COD_VIAJE) %>% group_by(UBICACION, UNIDAD) %>% summarise(numeroubicacion = n_distinct(COD_VIAJE)) %>% distinct()
#La mayoría de viajes son en camiones grandes y si se ve la cantidad por mes va aumentando para los camiones grandes. Mientras que para lo pequeños y paneles no, solamente fluctúan.
datos %>%
select(CLIENTE,Q, CANTIDAD, MES, UBICACION, UNIDAD) %>%
filter(MES== "01")%>%
group_by(CLIENTE) %>%
count(CLIENTE)
#Para ver si las tarifas actuales son aceptadas por el cliente
datos %>% select(CLIENTE,MES) %>% group_by(MES) %>%
count(CLIENTE) %>% distinct() %>%
arrange(CLIENTE)
#Los viajes que se hacen para cada cliente no están disminuyendo solo fluctúan
#La tarifa actual es de Q4 por cada cosa
datos %>% select(CLIENTE,MES,CANTIDAD) %>% group_by(CLIENTE, MES) %>%
summarise(TotalCantidad= sum(CANTIDAD))
Devol = data.frame(datos[grep("DEVOLUCION", datos$CLIENTE),])
Devol
Devol %>% select(CLIENTE) %>% count(CLIENTE)
#La cantidad que pide cada cliente por mes no está dismuyendo, el de algunos ha aumentado y el de otros solamente fluctúan
#¿Nos están robando los pilotos?
datos %>%
select(CLIENTE,Q, CANTIDAD, MES, UBICACION, UNIDAD) %>%
group_by(CLIENTE) %>%
count(CLIENTE)
falta = data.frame(datos[grep("Faltante",datos$CLIENTE),])
falta
falta2 = data.frame(datos[grep("FALTANTE",datos$CLIENTE),])
falta2
faltatotal = rbind(falta,falta2)
faltatotal
faltatotal %>% select(PILOTO, CLIENTE, MES, CANTIDAD) %>%
count(CLIENTE) %>%
arrange(desc(CLIENTE))
library(dplyr)
faltatotal %>% select(PILOTO, CLIENTE, MES, CANTIDAD) %>%
filter(stringr::str_detect(CLIENTE, 'EL PINCHE')) %>%
group_by(MES) %>%
count(CLIENTE) %>%
arrange(desc(CLIENTE))
datos %>%  select(CLIENTE, PILOTO, CANTIDAD, UBICACION,MES) %>%
filter(stringr::str_detect(CLIENTE, 'EL PINCHE')) %>%
filter(MES=="08") %>%
group_by(UBICACION) %>%
count(PILOTO)
#El mes en que más le robaron a el Pinche es en septiembre
#Fernando Mariano Berrio es el que entrego en el mes de agosto más veces, tiene más probabilidad que sea el
#Para saber si nos están robando primero vi la empresa que más faltantes se le entregaban y en que mes
faltatotal %>% select(PILOTO, CLIENTE, MES, CANTIDAD) %>%
filter(stringr::str_detect(CLIENTE, 'EL PINCHE')) %>%
group_by(MES, UBICACION) %>%
count(CLIENTE) %>%
arrange(desc(CLIENTE))
faltatotal %>% select(PILOTO, CLIENTE, MES, UBICACION,CANTIDAD) %>%
filter(stringr::str_detect(CLIENTE, 'EL PINCHE')) %>%
group_by(MES, UBICACION) %>%
count(CLIENTE) %>%
arrange(desc(CLIENTE))
#¿Nos están robando los pilotos?
datos %>%
select(CLIENTE,Q, CANTIDAD, MES, UBICACION, UNIDAD) %>%
group_by(CLIENTE) %>%
count(CLIENTE)
falta = data.frame(datos[grep("Faltante",datos$CLIENTE),])
falta
falta2 = data.frame(datos[grep("FALTANTE",datos$CLIENTE),])
falta2
faltatotal = rbind(falta,falta2)
faltatotal
faltatotal %>% select(PILOTO, CLIENTE, MES, CANTIDAD) %>%
count(CLIENTE) %>%
arrange(desc(CLIENTE))
library(dplyr)
faltatotal %>% select(PILOTO, CLIENTE, MES, UBICACION,CANTIDAD) %>%
filter(stringr::str_detect(CLIENTE, 'EL PINCHE')) %>%
group_by(MES, UBICACION) %>%
count(CLIENTE) %>%
arrange(desc(CLIENTE))
datos %>%  select(CLIENTE, PILOTO, CANTIDAD, UBICACION,MES) %>%
filter(stringr::str_detect(CLIENTE, 'EL PINCHE')) %>%
filter(MES=="08") %>%
group_by(UBICACION) %>%
count(PILOTO)
#El mes en que más le robaron a el Pinche es en septiembre
#Fernando Mariano Berrio es el que entrego en el mes de agosto más veces, tiene más probabilidad que sea el
#Para saber si nos están robando primero vi la empresa que más faltantes se le entregaban y en que mes
